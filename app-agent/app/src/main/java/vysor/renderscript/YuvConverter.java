package vysor.renderscript;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Bitmap.Config;
import android.graphics.Canvas;
import android.graphics.ColorMatrix;
import android.graphics.ColorMatrixColorFilter;
import android.graphics.Paint;
import android.graphics.PorterDuff.Mode;
import android.graphics.PorterDuffXfermode;
import android.graphics.Rect;
import android.os.Build.VERSION;
import android.renderscript.Allocation;
import android.renderscript.Allocation.MipmapControl;
import android.renderscript.Element;
import android.renderscript.Matrix4f;
import android.renderscript.RenderScript;
import android.renderscript.RenderScript.ContextType;
import android.renderscript.Short4;
import android.renderscript.Type.Builder;
import java.lang.reflect.Method;
import java.nio.ByteBuffer;

public class YuvConverter {
    public static String TMP = "/data/local/tmp";
    public static Context context;
    static final Method create;
//    private static int[] resources = new int[]{R.raw.uchar4to1, R.raw.uchar4to2, R.raw.uchar4to3, R.raw.uchar4to4};
    static final byte[] uchar4to1 = new byte[]{(byte) -34, (byte) -64, (byte) 23, (byte) 11, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 44, (byte) 0, (byte) 0, (byte) 0, (byte) 4, (byte) 5, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 16, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 64, (byte) 4, (byte) 0, (byte) 109, (byte) 7, (byte) 0, (byte) 0, (byte) 2, (byte) 64, (byte) 4, (byte) 0, (byte) 3, (byte) 0, (byte) 0, (byte) 0, (byte) 66, (byte) 67, (byte) -64, (byte) -34, (byte) 33, (byte) 12, (byte) 0, (byte) 0, (byte) 62, (byte) 1, (byte) 0, (byte) 0, (byte) 1, (byte) 16, (byte) 0, (byte) 0, (byte) 18, (byte) 0, (byte) 0, (byte) 0, (byte) 7, (byte) -127, (byte) 35, (byte) -111, (byte) 65, (byte) -56, (byte) 4, (byte) 73, (byte) 6, (byte) 16, (byte) 50, (byte) 57, (byte) -110, (byte) 1, (byte) -124, (byte) 12, (byte) 37, (byte) 5, (byte) 8, (byte) 25, (byte) 30, (byte) 4, (byte) -117, (byte) 98, Byte.MIN_VALUE, (byte) 20, (byte) 69, (byte) 2, (byte) 66, (byte) -110, (byte) 11, (byte) 66, (byte) -92, (byte) 16, (byte) 50, (byte) 20, (byte) 56, (byte) 8, (byte) 24, (byte) 73, (byte) 10, (byte) 50, (byte) 68, (byte) 36, (byte) 72, (byte) 10, (byte) -112, (byte) 33, (byte) 35, (byte) -60, (byte) 82, Byte.MIN_VALUE, (byte) 12, (byte) 25, (byte) 33, (byte) 114, (byte) 36, (byte) 7, (byte) -56, (byte) 72, (byte) 17, (byte) 98, (byte) -88, (byte) -96, (byte) -88, (byte) 64, (byte) -58, (byte) -16, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 73, (byte) 24, (byte) 0, (byte) 0, (byte) 11, (byte) 0, (byte) 0, (byte) 0, (byte) 11, (byte) -112, (byte) 0, (byte) 4, (byte) 65, (byte) 16, (byte) 4, (byte) 9, (byte) 1, (byte) 4, (byte) 65, (byte) 16, (byte) 4, (byte) -119, (byte) 1, (byte) 4, (byte) 65, (byte) 16, (byte) 4, (byte) -119, (byte) -1, (byte) -1, (byte) -1, (byte) -1, (byte) 31, (byte) -64, (byte) 96, (byte) -127, (byte) -16, (byte) -1, (byte) -1, (byte) -1, (byte) -1, (byte) 3, (byte) -80, (byte) 64, (byte) -8, (byte) -1, (byte) -1, (byte) -1, (byte) -1, (byte) 1, (byte) 12, (byte) 0, (byte) -119, (byte) 32, (byte) 0, (byte) 0, (byte) 22, (byte) 0, (byte) 0, (byte) 0, (byte) 50, (byte) 34, (byte) 72, (byte) 9, (byte) 32, (byte) 100, (byte) -123, (byte) 4, (byte) -109, (byte) 34, (byte) -92, (byte) -124, (byte) 4, (byte) -109, (byte) 34, (byte) -29, (byte) -124, (byte) -95, (byte) -112, (byte) 20, (byte) 18, (byte) 76, (byte) -118, (byte) -116, (byte) 11, (byte) -124, (byte) -92, (byte) 76, (byte) 16, (byte) 68, (byte) 51, (byte) 0, (byte) 9, (byte) 1, (byte) 110, (byte) -110, (byte) -90, (byte) -120, (byte) 18, (byte) 38, (byte) 63, (byte) -110, (byte) 126, (byte) 6, (byte) -104, (byte) 34, (byte) -28, (byte) -62, (byte) 47, (byte) 28, (byte) 5, (byte) -127, (byte) -60, (byte) 28, (byte) 1, (byte) 50, (byte) -116, (byte) 64, (byte) 16, (byte) 84, (byte) 70, (byte) 0, (byte) -120, (byte) -52, (byte) 17, Byte.MIN_VALUE, (byte) 65, (byte) 49, (byte) -114, (byte) 65, (byte) 40, (byte) 37, (byte) 82, (byte) -61, (byte) 8, (byte) 4, (byte) 80, (byte) 6, (byte) 54, (byte) 24, (byte) -75, (byte) -127, Byte.MIN_VALUE, (byte) 57, (byte) 2, (byte) 80, (byte) 0, (byte) 0, (byte) 19, (byte) -80, (byte) 112, (byte) -112, (byte) -121, (byte) 118, (byte) -80, (byte) -121, (byte) 59, (byte) 104, (byte) 3, (byte) 119, (byte) 120, (byte) 7, (byte) 119, (byte) 40, (byte) -121, (byte) 54, (byte) 96, (byte) -121, (byte) 116, (byte) 112, (byte) -121, (byte) 122, (byte) -64, (byte) -121, (byte) 54, (byte) 56, (byte) 7, (byte) 119, (byte) -88, (byte) -121, (byte) 114, (byte) 8, (byte) 7, (byte) 113, (byte) 72, (byte) -121, (byte) 13, (byte) 100, (byte) 80, (byte) 14, (byte) 109, (byte) 0, (byte) 15, (byte) 122, (byte) 48, (byte) 7, (byte) 114, (byte) -96, (byte) 7, (byte) 115, (byte) 32, (byte) 7, (byte) 109, (byte) -112, (byte) 14, (byte) 118, (byte) 64, (byte) 7, (byte) 122, (byte) 96, (byte) 7, (byte) 116, (byte) -48, (byte) 6, (byte) -10, (byte) 16, (byte) 7, (byte) 114, Byte.MIN_VALUE, (byte) 7, (byte) 122, (byte) 96, (byte) 7, (byte) 116, (byte) -96, (byte) 7, (byte) 113, (byte) 32, (byte) 7, (byte) 120, (byte) -48, (byte) 6, (byte) -18, (byte) 48, (byte) 7, (byte) 114, (byte) -48, (byte) 6, (byte) -77, (byte) 96, (byte) 7, (byte) 116, (byte) -96, (byte) -13, (byte) 64, (byte) -122, (byte) 4, (byte) 50, (byte) 66, (byte) 68, (byte) 4, (byte) -32, (byte) 36, (byte) 56, (byte) -51, (byte) -64, (byte) -121, (byte) 40, (byte) 11, (byte) 0, (byte) 0, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 48, (byte) 68, (byte) 113, Byte.MIN_VALUE, (byte) 0, (byte) 16, (byte) 0, (byte) 0, (byte) 0, Byte.MIN_VALUE, (byte) 44, (byte) 16, (byte) 0, (byte) 0, (byte) 0, (byte) 8, (byte) 0, (byte) 0, (byte) 0, (byte) 50, (byte) 30, (byte) -104, (byte) 16, (byte) 25, (byte) 17, (byte) 76, (byte) -112, (byte) -116, (byte) 9, (byte) 38, (byte) 71, (byte) -58, (byte) 4, (byte) 67, (byte) -126, (byte) 35, (byte) 0, (byte) 84, (byte) 70, (byte) 0, (byte) 40, (byte) -107, (byte) 64, (byte) 33, (byte) -112, (byte) 24, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 121, (byte) 24, (byte) 0, (byte) 0, (byte) -126, (byte) 0, (byte) 0, (byte) 0, (byte) 67, (byte) -116, (byte) -60, (byte) 120, (byte) -126, (byte) -28, (byte) 88, (byte) -96, (byte) -36, (byte) -61, (byte) 56, (byte) -96, (byte) 67, (byte) 56, (byte) -56, (byte) -61, (byte) 47, (byte) -52, (byte) 67, (byte) 58, (byte) -24, (byte) 67, (byte) 57, (byte) 12, (byte) 49, (byte) 18, (byte) -29, (byte) 25, (byte) -110, (byte) 99, (byte) 65, (byte) -45, (byte) 14, (byte) -23, (byte) -32, (byte) 14, (byte) -65, (byte) 80, (byte) 14, (byte) -18, (byte) 80, (byte) 15, (byte) -19, (byte) -16, (byte) 11, (byte) -13, (byte) -112, (byte) 14, (byte) -6, (byte) 80, (byte) 14, (byte) 67, (byte) -124, (byte) -89, (byte) 88, (byte) 32, (byte) -115, (byte) 3, (byte) 59, (byte) -124, (byte) -125, (byte) 59, (byte) -100, (byte) 3, (byte) 24, (byte) -40, (byte) 67, (byte) 57, (byte) -56, (byte) -61, (byte) 60, (byte) -92, (byte) -61, (byte) 59, (byte) -72, (byte) 3, (byte) 24, (byte) -52, (byte) -127, (byte) 27, (byte) -44, (byte) 1, (byte) 24, (byte) 12, (byte) 33, (byte) -98, (byte) -29, (byte) 65, (byte) 22, (byte) 28, (byte) -10, (byte) 80, (byte) 14, (byte) -14, (byte) 48, (byte) 15, (byte) -23, (byte) -16, (byte) 14, (byte) -18, (byte) -80, (byte) 32, (byte) -120, (byte) -125, (byte) 33, (byte) -60, (byte) -93, (byte) 60, (byte) -53, (byte) -126, (byte) 72, (byte) 29, (byte) -62, (byte) -63, (byte) 30, (byte) -62, (byte) -31, (byte) 23, (byte) -32, (byte) 33, (byte) 28, (byte) -58, (byte) 97, (byte) 29, (byte) -62, (byte) -31, (byte) 28, (byte) -54, (byte) -31, (byte) 23, (byte) -36, (byte) 33, (byte) 28, (byte) -38, (byte) -95, (byte) 28, (byte) 22, (byte) 88, (byte) -29, (byte) -16, (byte) 14, (byte) -19, (byte) -32, (byte) 6, (byte) -21, (byte) -16, (byte) 14, (byte) -11, (byte) 48, (byte) 15, (byte) -24, (byte) -112, (byte) 14, (byte) -21, (byte) 64, (byte) 14, (byte) -11, (byte) 64, (byte) 15, (byte) -12, (byte) 16, (byte) 14, (byte) 110, (byte) 96, (byte) 15, (byte) -7, (byte) 48, (byte) 15, (byte) -17, (byte) 32, (byte) 15, (byte) 67, (byte) -120, (byte) -89, (byte) 121, (byte) -100, (byte) 5, (byte) -48, (byte) 57, (byte) -48, (byte) -126, (byte) 60, (byte) -124, (byte) -125, (byte) 59, (byte) -52, (byte) -125, (byte) 57, (byte) -68, (byte) -125, (byte) 60, (byte) -76, (byte) 67, (byte) 43, (byte) -124, (byte) 3, (byte) 61, (byte) -56, (byte) 67, (byte) 58, (byte) -32, (byte) -61, (byte) 2, (byte) 33, (byte) 14, (byte) -18, (byte) 96, (byte) 8, (byte) -15, (byte) 64, (byte) 79, (byte) -76, (byte) 64, (byte) 57, (byte) 7, (byte) 90, (byte) -112, (byte) -121, (byte) 112, (byte) 112, (byte) -121, (byte) 121, (byte) 96, (byte) -121, (byte) 112, (byte) -96, (byte) -121, (byte) 114, (byte) 88, (byte) 96, (byte) -44, (byte) -61, (byte) 56, (byte) -96, (byte) 67, (byte) 56, (byte) -56, (byte) 3, (byte) 29, (byte) 12, (byte) 17, (byte) -98, (byte) 105, (byte) 1, (byte) 33, (byte) 15, (byte) -17, (byte) -16, (byte) 14, (byte) -12, (byte) 48, (byte) 68, (byte) 120, (byte) -86, (byte) 5, (byte) -62, (byte) 28, (byte) -60, (byte) -63, (byte) 16, (byte) -29, (byte) -71, (byte) -98, (byte) 11, (byte) 34, (byte) -122, (byte) 24, (byte) 15, (byte) -10, (byte) 100, (byte) 16, (byte) -79, (byte) -32, (byte) 121, (byte) -121, (byte) 118, (byte) 112, (byte) -121, (byte) 116, Byte.MIN_VALUE, (byte) -121, (byte) 119, (byte) -96, (byte) -121, (byte) 114, (byte) 112, (byte) 7, (byte) 122, (byte) 0, (byte) -125, (byte) 113, (byte) 64, (byte) -121, (byte) 112, (byte) -112, (byte) -121, (byte) 33, (byte) -62, (byte) -93, (byte) 45, (byte) -120, (byte) 102, (byte) 33, (byte) 29, (byte) -38, (byte) 1, (byte) 30, (byte) -40, (byte) -95, (byte) 28, (byte) -64, (byte) 96, (byte) 20, (byte) -34, (byte) 96, (byte) 20, (byte) -42, (byte) 96, (byte) 13, (byte) -64, Byte.MIN_VALUE, (byte) 22, (byte) 68, (byte) 33, (byte) 20, (byte) 66, (byte) 97, (byte) 68, (byte) -60, (byte) 14, (byte) -20, (byte) 96, (byte) 15, (byte) -19, (byte) -32, (byte) 6, (byte) -19, (byte) -16, (byte) 14, (byte) -28, (byte) 80, (byte) 15, (byte) -20, (byte) 80, (byte) 14, (byte) 110, (byte) 96, (byte) 14, (byte) -20, (byte) 16, (byte) 14, (byte) -25, (byte) 48, (byte) 15, (byte) 83, (byte) 4, (byte) 64, (byte) 24, (byte) -95, (byte) -80, (byte) 3, (byte) 59, (byte) -40, (byte) 67, (byte) 59, (byte) -72, (byte) 65, (byte) 58, (byte) -112, (byte) 67, (byte) 57, (byte) -72, (byte) 3, (byte) 61, (byte) 76, (byte) 9, (byte) -120, (byte) 17, (byte) -57, (byte) 24, (byte) -64, (byte) -125, (byte) 60, (byte) -124, (byte) -61, (byte) 57, (byte) -76, (byte) 67, (byte) 56, (byte) 76, (byte) 17, (byte) -116, (byte) 100, (byte) -124, (byte) 51, (byte) 6, (byte) -14, (byte) 48, (byte) 15, (byte) -65, (byte) 80, (byte) 14, (byte) -8, (byte) 0, (byte) 15, (byte) -17, (byte) 32, (byte) 15, (byte) -12, (byte) -16, (byte) 11, (byte) -10, (byte) 16, (byte) 14, (byte) -14, (byte) 48, (byte) 69, (byte) 96, (byte) -98, (byte) 17, (byte) -48, (byte) 24, (byte) -56, (byte) -61, (byte) 60, (byte) -4, (byte) -62, (byte) 59, (byte) -120, (byte) -125, (byte) 58, (byte) -108, (byte) -61, (byte) 56, (byte) -48, (byte) -61, (byte) 47, (byte) -52, (byte) 3, (byte) 59, (byte) -68, (byte) 3, (byte) 61, (byte) -52, (byte) -61, (byte) 20, (byte) 96, (byte) -60, (byte) 53, (byte) 6, (byte) -14, (byte) 48, (byte) 15, (byte) -65, (byte) 80, (byte) 14, (byte) -8, (byte) 0, (byte) 15, (byte) -17, (byte) 32, (byte) 15, (byte) -12, (byte) -16, (byte) 11, (byte) -26, (byte) -16, (byte) 14, (byte) -14, (byte) 80, (byte) 14, (byte) -31, (byte) 48, (byte) 14, (byte) -24, (byte) -16, (byte) 11, (byte) -18, (byte) 16, (byte) 14, (byte) -19, (byte) 80, (byte) 14, (byte) 83, (byte) 2, (byte) 105, (byte) -124, (byte) 52, (byte) 6, (byte) -14, (byte) 48, (byte) 15, (byte) -65, (byte) 80, (byte) 14, (byte) -8, (byte) 0, (byte) 15, (byte) -17, (byte) 32, (byte) 15, (byte) -12, (byte) -16, (byte) 11, (byte) -26, (byte) -16, (byte) 14, (byte) -14, (byte) 80, (byte) 14, (byte) -31, (byte) 48, (byte) 14, (byte) -24, (byte) 48, (byte) 37, (byte) -96, (byte) 0, (byte) 0, (byte) 0, (byte) 121, (byte) 24, (byte) 0, (byte) 0, (byte) 23, (byte) 0, (byte) 0, (byte) 0, (byte) 51, (byte) 8, Byte.MIN_VALUE, (byte) 28, (byte) -60, (byte) -31, (byte) 28, (byte) 102, (byte) 20, (byte) 1, (byte) 61, (byte) -120, (byte) 67, (byte) 56, (byte) -124, (byte) -61, (byte) -116, (byte) 66, Byte.MIN_VALUE, (byte) 7, (byte) 121, (byte) 120, (byte) 7, (byte) 115, (byte) -104, (byte) 113, (byte) 12, (byte) -26, (byte) 0, (byte) 15, (byte) -19, (byte) 16, (byte) 14, (byte) -12, Byte.MIN_VALUE, (byte) 14, (byte) 51, (byte) 12, (byte) 66, (byte) 30, (byte) -62, (byte) -63, (byte) 29, (byte) -50, (byte) -95, (byte) 28, (byte) 102, (byte) 48, (byte) 5, (byte) 61, (byte) -120, (byte) 67, (byte) 56, (byte) -124, (byte) -125, (byte) 27, (byte) -52, (byte) 3, (byte) 61, (byte) -56, (byte) 67, (byte) 61, (byte) -116, (byte) 3, (byte) 61, (byte) -52, (byte) 120, (byte) -116, (byte) 116, (byte) 112, (byte) 7, (byte) 123, (byte) 8, (byte) 7, (byte) 121, (byte) 72, (byte) -121, (byte) 112, (byte) 112, (byte) 7, (byte) 122, (byte) 112, (byte) 3, (byte) 118, (byte) 120, (byte) -121, (byte) 112, (byte) 32, (byte) 7, (byte) 0, (byte) 0, (byte) 0, (byte) 113, (byte) 32, (byte) 0, (byte) 0, (byte) 16, (byte) 0, (byte) 0, (byte) 0, (byte) 38, (byte) 64, (byte) 68, (byte) -114, (byte) 51, (byte) -39, (byte) 64, (byte) 26, (byte) -4, (byte) 115, (byte) -83, (byte) 71, (byte) -110, (byte) 9, (byte) 76, (byte) 17, (byte) 114, (byte) -103, (byte) -44, (byte) 50, (byte) 33, (byte) -49, (byte) -126, (byte) -91, (byte) 100, (byte) 109, (byte) 71, (byte) -46, (byte) -49, (byte) 0, (byte) 83, (byte) -124, (byte) 92, (byte) -8, (byte) -123, (byte) 119, (byte) 21, (byte) -2, (byte) 23, (byte) 22, (byte) -96, (byte) 24, (byte) 109, (byte) 4, (byte) 52, (byte) -46, (byte) 2, (byte) 76, (byte) -124, (byte) 1, (byte) 64, (byte) 70, (byte) 27, (byte) 1, (byte) -115, (byte) 84, (byte) 56, (byte) 17, (byte) 99, (byte) 2, (byte) 83, (byte) -124, (byte) 92, (byte) 0, (byte) 97, (byte) 32, (byte) 0, (byte) 0, (byte) 41, (byte) 0, (byte) 0, (byte) 0, (byte) 19, (byte) 4, (byte) 65, (byte) 44, (byte) 16, (byte) 0, (byte) 0, (byte) 0, (byte) 3, (byte) 0, (byte) 0, (byte) 0, (byte) -108, (byte) 70, (byte) 0, (byte) -118, (byte) -96, (byte) 12, (byte) -120, (byte) -51, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) -108, (byte) -116, (byte) 49, (byte) 4, (byte) -55, (byte) -71, (byte) 9, (byte) -44, (byte) 28, (byte) 67, (byte) 68, (byte) 57, (byte) 99, (byte) 8, (byte) -110, (byte) 113, (byte) 22, (byte) -88, (byte) 57, (byte) -122, (byte) -22, (byte) 50, (byte) -58, (byte) 16, (byte) -92, (byte) -25, (byte) 50, (byte) 80, (byte) 115, (byte) 12, (byte) -104, (byte) -10, (byte) -116, (byte) 33, (byte) 72, (byte) -48, (byte) 113, (byte) -96, (byte) -26, (byte) 24, (byte) -74, (byte) 14, (byte) 26, (byte) 49, (byte) 40, (byte) -122, (byte) 96, (byte) 0, (byte) -68, (byte) 49, (byte) -124, (byte) -49, (byte) 57, (byte) 48, (byte) 32, (byte) 67, (byte) -63, (byte) 24, (byte) 67, (byte) 16, (byte) 3, (byte) -89, (byte) -62, (byte) 96, (byte) 12, (byte) 96, (byte) 48, (byte) 66, (byte) 33, (byte) -125, (byte) 0, (byte) -64, (byte) 112, (byte) 32, (byte) 0, (byte) 0, (byte) 8, (byte) 0, (byte) 0, (byte) 0, (byte) -74, (byte) 112, (byte) 80, (byte) 82, (byte) -44, (byte) 1, (byte) 19, (byte) 96, (byte) 12, (byte) -63, (byte) 101, (byte) 13, (byte) 1, (byte) 102, (byte) 35, (byte) -124, (byte) 31, (byte) 29, (byte) -110, (byte) 37, (byte) 16, (byte) -43, (byte) -113, (byte) 52, (byte) -90, (byte) 80, (byte) 84, (byte) -65, (byte) 67, (byte) 77, (byte) 0, (byte) 0, (byte) 1, (byte) 49, (byte) 0, (byte) 0, (byte) 4, (byte) 0, (byte) 0, (byte) 0, (byte) 91, (byte) 6, (byte) 32, (byte) -80, (byte) -74, (byte) 12, (byte) 80, (byte) 96, (byte) 109, (byte) 25, (byte) -90, (byte) -64, (byte) 2, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0};
    static final byte[] uchar4to2 = new byte[]{(byte) -34, (byte) -64, (byte) 23, (byte) 11, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 44, (byte) 0, (byte) 0, (byte) 0, (byte) 40, (byte) 5, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 16, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 64, (byte) 4, (byte) 0, (byte) 109, (byte) 7, (byte) 0, (byte) 0, (byte) 2, (byte) 64, (byte) 4, (byte) 0, (byte) 3, (byte) 0, (byte) 0, (byte) 0, (byte) 66, (byte) 67, (byte) -64, (byte) -34, (byte) 33, (byte) 12, (byte) 0, (byte) 0, (byte) 71, (byte) 1, (byte) 0, (byte) 0, (byte) 1, (byte) 16, (byte) 0, (byte) 0, (byte) 18, (byte) 0, (byte) 0, (byte) 0, (byte) 7, (byte) -127, (byte) 35, (byte) -111, (byte) 65, (byte) -56, (byte) 4, (byte) 73, (byte) 6, (byte) 16, (byte) 50, (byte) 57, (byte) -110, (byte) 1, (byte) -124, (byte) 12, (byte) 37, (byte) 5, (byte) 8, (byte) 25, (byte) 30, (byte) 4, (byte) -117, (byte) 98, Byte.MIN_VALUE, (byte) 20, (byte) 69, (byte) 2, (byte) 66, (byte) -110, (byte) 11, (byte) 66, (byte) -92, (byte) 16, (byte) 50, (byte) 20, (byte) 56, (byte) 8, (byte) 24, (byte) 73, (byte) 10, (byte) 50, (byte) 68, (byte) 36, (byte) 72, (byte) 10, (byte) -112, (byte) 33, (byte) 35, (byte) -60, (byte) 82, Byte.MIN_VALUE, (byte) 12, (byte) 25, (byte) 33, (byte) 114, (byte) 36, (byte) 7, (byte) -56, (byte) 72, (byte) 17, (byte) 98, (byte) -88, (byte) -96, (byte) -88, (byte) 64, (byte) -58, (byte) -16, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 73, (byte) 24, (byte) 0, (byte) 0, (byte) 11, (byte) 0, (byte) 0, (byte) 0, (byte) 11, (byte) -112, (byte) 0, (byte) 4, (byte) 65, (byte) 16, (byte) 4, (byte) 9, (byte) 1, (byte) 4, (byte) 65, (byte) 16, (byte) 4, (byte) -119, (byte) 1, (byte) 4, (byte) 65, (byte) 16, (byte) 4, (byte) -119, (byte) -1, (byte) -1, (byte) -1, (byte) -1, (byte) 31, (byte) -64, (byte) 96, (byte) -127, (byte) -16, (byte) -1, (byte) -1, (byte) -1, (byte) -1, (byte) 3, (byte) -80, (byte) 64, (byte) -8, (byte) -1, (byte) -1, (byte) -1, (byte) -1, (byte) 1, (byte) 12, (byte) 0, (byte) -119, (byte) 32, (byte) 0, (byte) 0, (byte) 25, (byte) 0, (byte) 0, (byte) 0, (byte) 50, (byte) 34, (byte) 72, (byte) 9, (byte) 32, (byte) 100, (byte) -123, (byte) 4, (byte) -109, (byte) 34, (byte) -92, (byte) -124, (byte) 4, (byte) -109, (byte) 34, (byte) -29, (byte) -124, (byte) -95, (byte) -112, (byte) 20, (byte) 18, (byte) 76, (byte) -118, (byte) -116, (byte) 11, (byte) -124, (byte) -92, (byte) 76, (byte) 16, (byte) 80, (byte) 51, (byte) 0, (byte) 9, (byte) 1, (byte) -82, (byte) -110, (byte) -90, (byte) -120, (byte) 18, (byte) 38, (byte) 63, (byte) -110, (byte) 126, (byte) 6, (byte) -104, (byte) 34, (byte) -28, (byte) -62, (byte) 47, (byte) -36, (byte) -89, (byte) 81, (byte) 16, (byte) 72, (byte) -52, (byte) 17, (byte) 32, (byte) -61, (byte) 8, (byte) 4, (byte) 65, (byte) 101, (byte) 4, (byte) 96, (byte) 24, (byte) 65, (byte) 32, (byte) 8, (byte) 17, (byte) -103, (byte) 35, (byte) 0, (byte) -125, (byte) 98, (byte) 28, (byte) -109, (byte) -44, (byte) 90, (byte) -60, (byte) -122, (byte) 17, (byte) 8, (byte) -96, (byte) 12, (byte) 110, (byte) 56, (byte) 122, (byte) 3, (byte) 1, (byte) 115, (byte) 4, (byte) -96, (byte) 48, (byte) -116, (byte) 32, (byte) 44, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 19, (byte) -80, (byte) 112, (byte) -112, (byte) -121, (byte) 118, (byte) -80, (byte) -121, (byte) 59, (byte) 104, (byte) 3, (byte) 119, (byte) 120, (byte) 7, (byte) 119, (byte) 40, (byte) -121, (byte) 54, (byte) 96, (byte) -121, (byte) 116, (byte) 112, (byte) -121, (byte) 122, (byte) -64, (byte) -121, (byte) 54, (byte) 56, (byte) 7, (byte) 119, (byte) -88, (byte) -121, (byte) 114, (byte) 8, (byte) 7, (byte) 113, (byte) 72, (byte) -121, (byte) 13, (byte) 100, (byte) 80, (byte) 14, (byte) 109, (byte) 0, (byte) 15, (byte) 122, (byte) 48, (byte) 7, (byte) 114, (byte) -96, (byte) 7, (byte) 115, (byte) 32, (byte) 7, (byte) 109, (byte) -112, (byte) 14, (byte) 118, (byte) 64, (byte) 7, (byte) 122, (byte) 96, (byte) 7, (byte) 116, (byte) -48, (byte) 6, (byte) -10, (byte) 16, (byte) 7, (byte) 114, Byte.MIN_VALUE, (byte) 7, (byte) 122, (byte) 96, (byte) 7, (byte) 116, (byte) -96, (byte) 7, (byte) 113, (byte) 32, (byte) 7, (byte) 120, (byte) -48, (byte) 6, (byte) -18, (byte) 48, (byte) 7, (byte) 114, (byte) -48, (byte) 6, (byte) -77, (byte) 96, (byte) 7, (byte) 116, (byte) -96, (byte) -13, (byte) 64, (byte) -122, (byte) 4, (byte) 50, (byte) 66, (byte) 68, (byte) 4, (byte) -32, (byte) 36, (byte) 56, (byte) -51, (byte) -64, (byte) -121, (byte) 40, (byte) 13, (byte) 0, (byte) 0, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 48, (byte) 68, (byte) -127, Byte.MIN_VALUE, (byte) 0, (byte) 16, (byte) 0, (byte) 0, (byte) 0, Byte.MIN_VALUE, (byte) 44, (byte) 16, (byte) 0, (byte) 0, (byte) 0, (byte) 8, (byte) 0, (byte) 0, (byte) 0, (byte) 50, (byte) 30, (byte) -104, (byte) 16, (byte) 25, (byte) 17, (byte) 76, (byte) -112, (byte) -116, (byte) 9, (byte) 38, (byte) 71, (byte) -58, (byte) 4, (byte) 67, (byte) -110, (byte) 35, (byte) 0, (byte) 84, (byte) 70, (byte) 0, (byte) 104, (byte) -107, (byte) 64, (byte) 33, (byte) -112, (byte) 24, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 121, (byte) 24, (byte) 0, (byte) 0, (byte) -126, (byte) 0, (byte) 0, (byte) 0, (byte) 67, (byte) -116, (byte) -59, (byte) -120, (byte) -126, (byte) -27, (byte) 88, (byte) -96, (byte) -36, (byte) -61, (byte) 56, (byte) -96, (byte) 67, (byte) 56, (byte) -56, (byte) -61, (byte) 47, (byte) -52, (byte) 67, (byte) 58, (byte) -24, (byte) 67, (byte) 57, (byte) 12, (byte) 49, (byte) 22, (byte) 35, (byte) 26, (byte) -106, (byte) 99, (byte) 65, (byte) -45, (byte) 14, (byte) -23, (byte) -32, (byte) 14, (byte) -65, (byte) 80, (byte) 14, (byte) -18, (byte) 80, (byte) 15, (byte) -19, (byte) -16, (byte) 11, (byte) -13, (byte) -112, (byte) 14, (byte) -6, (byte) 80, (byte) 14, (byte) 67, (byte) -124, (byte) -88, (byte) 88, (byte) 32, (byte) -115, (byte) 3, (byte) 59, (byte) -124, (byte) -125, (byte) 59, (byte) -100, (byte) 3, (byte) 24, (byte) -40, (byte) 67, (byte) 57, (byte) -56, (byte) -61, (byte) 60, (byte) -92, (byte) -61, (byte) 59, (byte) -72, (byte) 3, (byte) 24, (byte) -52, (byte) -127, (byte) 27, (byte) -44, (byte) 1, (byte) 24, (byte) 12, (byte) 33, (byte) -94, (byte) 35, (byte) 66, (byte) 22, (byte) 28, (byte) -10, (byte) 80, (byte) 14, (byte) -14, (byte) 48, (byte) 15, (byte) -23, (byte) -16, (byte) 14, (byte) -18, (byte) -80, (byte) 32, (byte) -120, (byte) -125, (byte) 33, (byte) 68, (byte) -92, (byte) 68, (byte) -53, (byte) -126, (byte) 72, (byte) 29, (byte) -62, (byte) -63, (byte) 30, (byte) -62, (byte) -31, (byte) 23, (byte) -32, (byte) 33, (byte) 28, (byte) -58, (byte) 97, (byte) 29, (byte) -62, (byte) -31, (byte) 28, (byte) -54, (byte) -31, (byte) 23, (byte) -36, (byte) 33, (byte) 28, (byte) -38, (byte) -95, (byte) 28, (byte) 22, (byte) 88, (byte) -29, (byte) -16, (byte) 14, (byte) -19, (byte) -32, (byte) 6, (byte) -21, (byte) -16, (byte) 14, (byte) -11, (byte) 48, (byte) 15, (byte) -24, (byte) -112, (byte) 14, (byte) -21, (byte) 64, (byte) 14, (byte) -11, (byte) 64, (byte) 15, (byte) -12, (byte) 16, (byte) 14, (byte) 110, (byte) 96, (byte) 15, (byte) -7, (byte) 48, (byte) 15, (byte) -17, (byte) 32, (byte) 15, (byte) 67, (byte) -120, (byte) -88, (byte) -119, (byte) -100, (byte) 5, (byte) -48, (byte) 57, (byte) -48, (byte) -126, (byte) 60, (byte) -124, (byte) -125, (byte) 59, (byte) -52, (byte) -125, (byte) 57, (byte) -68, (byte) -125, (byte) 60, (byte) -76, (byte) 67, (byte) 43, (byte) -124, (byte) 3, (byte) 61, (byte) -56, (byte) 67, (byte) 58, (byte) -32, (byte) -61, (byte) 2, (byte) 33, (byte) 14, (byte) -18, (byte) 96, (byte) 8, (byte) 17, (byte) 65, (byte) 81, (byte) -76, (byte) 64, (byte) 57, (byte) 7, (byte) 90, (byte) -112, (byte) -121, (byte) 112, (byte) 112, (byte) -121, (byte) 121, (byte) 96, (byte) -121, (byte) 112, (byte) -96, (byte) -121, (byte) 114, (byte) 88, (byte) 96, (byte) -44, (byte) -61, (byte) 56, (byte) -96, (byte) 67, (byte) 56, (byte) -56, (byte) 3, (byte) 29, (byte) 12, (byte) 17, (byte) -94, (byte) 105, (byte) 1, (byte) 33, (byte) 15, (byte) -17, (byte) -16, (byte) 14, (byte) -12, (byte) 48, (byte) 68, (byte) -120, (byte) -86, (byte) 5, (byte) -62, (byte) 28, (byte) -60, (byte) -63, (byte) 16, (byte) 35, (byte) -70, (byte) -94, (byte) 75, (byte) 34, (byte) -122, (byte) 24, (byte) 17, (byte) 22, (byte) 101, (byte) 18, (byte) -79, (byte) -32, (byte) 121, (byte) -121, (byte) 118, (byte) 112, (byte) -121, (byte) 116, Byte.MIN_VALUE, (byte) -121, (byte) 119, (byte) -96, (byte) -121, (byte) 114, (byte) 112, (byte) 7, (byte) 122, (byte) 0, (byte) -125, (byte) 113, (byte) 64, (byte) -121, (byte) 112, (byte) -112, (byte) -121, (byte) 33, (byte) 66, (byte) -92, (byte) 45, (byte) -120, (byte) 102, (byte) 33, (byte) 29, (byte) -38, (byte) 1, (byte) 30, (byte) -40, (byte) -95, (byte) 28, (byte) -64, (byte) 96, (byte) 20, (byte) -34, (byte) 96, (byte) 20, (byte) -42, (byte) 96, (byte) 13, (byte) -64, Byte.MIN_VALUE, (byte) 22, (byte) 68, (byte) 33, (byte) 20, (byte) 66, (byte) 97, (byte) 68, (byte) -60, (byte) 14, (byte) -20, (byte) 96, (byte) 15, (byte) -19, (byte) -32, (byte) 6, (byte) -19, (byte) -16, (byte) 14, (byte) -28, (byte) 80, (byte) 15, (byte) -20, (byte) 80, (byte) 14, (byte) 110, (byte) 96, (byte) 14, (byte) -20, (byte) 16, (byte) 14, (byte) -25, (byte) 48, (byte) 15, (byte) 83, (byte) 4, (byte) 64, (byte) 24, (byte) -95, (byte) -80, (byte) 3, (byte) 59, (byte) -40, (byte) 67, (byte) 59, (byte) -72, (byte) 65, (byte) 58, (byte) -112, (byte) 67, (byte) 57, (byte) -72, (byte) 3, (byte) 61, (byte) 76, (byte) 9, (byte) -120, (byte) 17, (byte) -57, (byte) 24, (byte) -64, (byte) -125, (byte) 60, (byte) -124, (byte) -61, (byte) 57, (byte) -76, (byte) 67, (byte) 56, (byte) 76, (byte) 17, (byte) -116, (byte) 100, (byte) -124, (byte) 51, (byte) 6, (byte) -14, (byte) 48, (byte) 15, (byte) -65, (byte) 80, (byte) 14, (byte) -8, (byte) 0, (byte) 15, (byte) -17, (byte) 32, (byte) 15, (byte) -12, (byte) -16, (byte) 11, (byte) -10, (byte) 16, (byte) 14, (byte) -14, (byte) 48, (byte) 69, (byte) 96, (byte) -98, (byte) 17, (byte) -48, (byte) 24, (byte) -56, (byte) -61, (byte) 60, (byte) -4, (byte) -62, (byte) 59, (byte) -120, (byte) -125, (byte) 58, (byte) -108, (byte) -61, (byte) 56, (byte) -48, (byte) -61, (byte) 47, (byte) -52, (byte) 3, (byte) 59, (byte) -68, (byte) 3, (byte) 61, (byte) -52, (byte) -61, (byte) 20, (byte) 96, (byte) -60, (byte) 53, (byte) 6, (byte) -14, (byte) 48, (byte) 15, (byte) -65, (byte) 80, (byte) 14, (byte) -8, (byte) 0, (byte) 15, (byte) -17, (byte) 32, (byte) 15, (byte) -12, (byte) -16, (byte) 11, (byte) -26, (byte) -16, (byte) 14, (byte) -14, (byte) 80, (byte) 14, (byte) -31, (byte) 48, (byte) 14, (byte) -24, (byte) -16, (byte) 11, (byte) -18, (byte) 16, (byte) 14, (byte) -19, (byte) 80, (byte) 14, (byte) 83, (byte) 2, (byte) 105, (byte) -124, (byte) 52, (byte) 6, (byte) -14, (byte) 48, (byte) 15, (byte) -65, (byte) 80, (byte) 14, (byte) -8, (byte) 0, (byte) 15, (byte) -17, (byte) 32, (byte) 15, (byte) -12, (byte) -16, (byte) 11, (byte) -26, (byte) -16, (byte) 14, (byte) -14, (byte) 80, (byte) 14, (byte) -31, (byte) 48, (byte) 14, (byte) -24, (byte) 48, (byte) 37, (byte) -96, (byte) 0, (byte) 0, (byte) 0, (byte) 121, (byte) 24, (byte) 0, (byte) 0, (byte) 23, (byte) 0, (byte) 0, (byte) 0, (byte) 51, (byte) 8, Byte.MIN_VALUE, (byte) 28, (byte) -60, (byte) -31, (byte) 28, (byte) 102, (byte) 20, (byte) 1, (byte) 61, (byte) -120, (byte) 67, (byte) 56, (byte) -124, (byte) -61, (byte) -116, (byte) 66, Byte.MIN_VALUE, (byte) 7, (byte) 121, (byte) 120, (byte) 7, (byte) 115, (byte) -104, (byte) 113, (byte) 12, (byte) -26, (byte) 0, (byte) 15, (byte) -19, (byte) 16, (byte) 14, (byte) -12, Byte.MIN_VALUE, (byte) 14, (byte) 51, (byte) 12, (byte) 66, (byte) 30, (byte) -62, (byte) -63, (byte) 29, (byte) -50, (byte) -95, (byte) 28, (byte) 102, (byte) 48, (byte) 5, (byte) 61, (byte) -120, (byte) 67, (byte) 56, (byte) -124, (byte) -125, (byte) 27, (byte) -52, (byte) 3, (byte) 61, (byte) -56, (byte) 67, (byte) 61, (byte) -116, (byte) 3, (byte) 61, (byte) -52, (byte) 120, (byte) -116, (byte) 116, (byte) 112, (byte) 7, (byte) 123, (byte) 8, (byte) 7, (byte) 121, (byte) 72, (byte) -121, (byte) 112, (byte) 112, (byte) 7, (byte) 122, (byte) 112, (byte) 3, (byte) 118, (byte) 120, (byte) -121, (byte) 112, (byte) 32, (byte) 7, (byte) 0, (byte) 0, (byte) 0, (byte) 113, (byte) 32, (byte) 0, (byte) 0, (byte) 16, (byte) 0, (byte) 0, (byte) 0, (byte) 38, (byte) 64, (byte) 68, (byte) -114, (byte) 51, (byte) -39, (byte) 64, (byte) 26, (byte) -4, (byte) 115, (byte) -83, (byte) 71, (byte) -110, (byte) 9, (byte) 76, (byte) 17, (byte) 114, (byte) -103, (byte) -44, (byte) 50, (byte) 33, (byte) -49, (byte) -126, (byte) -91, (byte) 100, (byte) 109, (byte) 71, (byte) -46, (byte) -49, (byte) 0, (byte) 83, (byte) -124, (byte) 92, (byte) -8, (byte) -123, (byte) 119, (byte) 21, (byte) -2, (byte) 23, (byte) 22, (byte) -96, (byte) 24, (byte) 109, (byte) 4, (byte) 52, (byte) -46, (byte) 2, (byte) 76, (byte) -124, (byte) 1, (byte) 64, (byte) 70, (byte) 27, (byte) 1, (byte) -115, (byte) 84, (byte) 56, (byte) 17, (byte) 99, (byte) 2, (byte) 83, (byte) -124, (byte) 92, (byte) 0, (byte) 97, (byte) 32, (byte) 0, (byte) 0, (byte) 47, (byte) 0, (byte) 0, (byte) 0, (byte) 19, (byte) 4, (byte) 65, (byte) 44, (byte) 16, (byte) 0, (byte) 0, (byte) 0, (byte) 5, (byte) 0, (byte) 0, (byte) 0, (byte) 84, (byte) 102, (byte) 0, (byte) 104, (byte) -115, (byte) 0, (byte) 20, (byte) 65, (byte) 25, (byte) -48, (byte) 28, (byte) 75, (byte) 0, (byte) 2, (byte) 114, (byte) 51, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) -108, (byte) -116, (byte) 49, (byte) 4, (byte) -22, (byte) -71, (byte) 10, (byte) -44, (byte) 28, (byte) -61, (byte) 100, (byte) 61, (byte) 99, (byte) 8, (byte) -108, (byte) 113, (byte) 24, (byte) -88, (byte) 57, (byte) -122, (byte) 43, (byte) 51, (byte) -58, (byte) 16, (byte) 40, (byte) -24, (byte) 54, (byte) 80, (byte) 115, (byte) 12, (byte) 26, (byte) 7, (byte) -115, (byte) 33, (byte) 80, (byte) -47, (byte) 121, (byte) -96, (byte) -26, (byte) 24, (byte) -70, (byte) 47, (byte) 26, (byte) 49, (byte) 40, (byte) -122, (byte) 96, (byte) 0, (byte) -64, (byte) 96, (byte) 12, (byte) 33, (byte) 12, (byte) -98, (byte) 19, (byte) 3, (byte) 50, (byte) 115, (byte) 12, (byte) -50, (byte) 24, (byte) 60, (byte) 99, (byte) 8, (byte) 97, (byte) 96, (byte) 92, (byte) 25, (byte) -112, (byte) -103, (byte) 99, (byte) 32, (byte) 3, (byte) 51, (byte) 48, (byte) 40, (byte) 24, (byte) 117, (byte) 6, (byte) 104, (byte) 0, (byte) -125, (byte) 12, (byte) 105, (byte) -32, (byte) 72, (byte) -125, (byte) 17, (byte) -118, (byte) 26, (byte) 8, (byte) 0, (byte) -122, (byte) 3, (byte) 1, (byte) 0, (byte) 7, (byte) 0, (byte) 0, (byte) 0, (byte) -74, (byte) 112, (byte) 80, (byte) 82, (byte) -44, (byte) 1, (byte) 19, (byte) 96, (byte) 12, (byte) -63, (byte) 101, (byte) 13, (byte) 1, (byte) 102, (byte) 9, (byte) 68, (byte) -11, (byte) 35, (byte) -115, (byte) 41, (byte) 20, (byte) -43, (byte) -17, (byte) 80, (byte) 19, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 49, (byte) 0, (byte) 0, (byte) 4, (byte) 0, (byte) 0, (byte) 0, (byte) 91, (byte) 6, (byte) 32, (byte) -80, (byte) -74, (byte) 12, (byte) 84, (byte) 96, (byte) 109, (byte) 25, (byte) -82, (byte) -64, (byte) 2, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0};
    static final byte[] uchar4to3 = new byte[]{(byte) -34, (byte) -64, (byte) 23, (byte) 11, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 44, (byte) 0, (byte) 0, (byte) 0, (byte) 76, (byte) 5, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 16, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 64, (byte) 4, (byte) 0, (byte) 109, (byte) 7, (byte) 0, (byte) 0, (byte) 2, (byte) 64, (byte) 4, (byte) 0, (byte) 3, (byte) 0, (byte) 0, (byte) 0, (byte) 66, (byte) 67, (byte) -64, (byte) -34, (byte) 33, (byte) 12, (byte) 0, (byte) 0, (byte) 80, (byte) 1, (byte) 0, (byte) 0, (byte) 1, (byte) 16, (byte) 0, (byte) 0, (byte) 18, (byte) 0, (byte) 0, (byte) 0, (byte) 7, (byte) -127, (byte) 35, (byte) -111, (byte) 65, (byte) -56, (byte) 4, (byte) 73, (byte) 6, (byte) 16, (byte) 50, (byte) 57, (byte) -110, (byte) 1, (byte) -124, (byte) 12, (byte) 37, (byte) 5, (byte) 8, (byte) 25, (byte) 30, (byte) 4, (byte) -117, (byte) 98, Byte.MIN_VALUE, (byte) 20, (byte) 69, (byte) 2, (byte) 66, (byte) -110, (byte) 11, (byte) 66, (byte) -92, (byte) 16, (byte) 50, (byte) 20, (byte) 56, (byte) 8, (byte) 24, (byte) 73, (byte) 10, (byte) 50, (byte) 68, (byte) 36, (byte) 72, (byte) 10, (byte) -112, (byte) 33, (byte) 35, (byte) -60, (byte) 82, Byte.MIN_VALUE, (byte) 12, (byte) 25, (byte) 33, (byte) 114, (byte) 36, (byte) 7, (byte) -56, (byte) 72, (byte) 17, (byte) 98, (byte) -88, (byte) -96, (byte) -88, (byte) 64, (byte) -58, (byte) -16, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 73, (byte) 24, (byte) 0, (byte) 0, (byte) 11, (byte) 0, (byte) 0, (byte) 0, (byte) 11, (byte) -112, (byte) 0, (byte) 4, (byte) 65, (byte) 16, (byte) 4, (byte) 9, (byte) 1, (byte) 4, (byte) 65, (byte) 16, (byte) 4, (byte) -119, (byte) 1, (byte) 4, (byte) 65, (byte) 16, (byte) 4, (byte) -119, (byte) -1, (byte) -1, (byte) -1, (byte) -1, (byte) 31, (byte) -64, (byte) 96, (byte) -127, (byte) -16, (byte) -1, (byte) -1, (byte) -1, (byte) -1, (byte) 3, (byte) -80, (byte) 64, (byte) -8, (byte) -1, (byte) -1, (byte) -1, (byte) -1, (byte) 1, (byte) 12, (byte) 0, (byte) -119, (byte) 32, (byte) 0, (byte) 0, (byte) 25, (byte) 0, (byte) 0, (byte) 0, (byte) 50, (byte) 34, (byte) 72, (byte) 9, (byte) 32, (byte) 100, (byte) -123, (byte) 4, (byte) -109, (byte) 34, (byte) -92, (byte) -124, (byte) 4, (byte) -109, (byte) 34, (byte) -29, (byte) -124, (byte) -95, (byte) -112, (byte) 20, (byte) 18, (byte) 76, (byte) -118, (byte) -116, (byte) 11, (byte) -124, (byte) -92, (byte) 76, (byte) 16, (byte) 84, (byte) 51, (byte) 0, (byte) 9, (byte) 1, (byte) -82, (byte) -110, (byte) -90, (byte) -120, (byte) 18, (byte) 38, (byte) 63, (byte) -110, (byte) 126, (byte) 6, (byte) -104, (byte) 34, (byte) -28, (byte) -62, (byte) 47, (byte) -36, (byte) -81, (byte) 81, (byte) 16, (byte) 72, (byte) -52, (byte) 17, (byte) 32, (byte) -61, (byte) 8, (byte) 4, (byte) 65, (byte) 101, (byte) 4, (byte) 96, (byte) 24, (byte) 97, (byte) 32, (byte) 8, (byte) 17, (byte) -103, (byte) 35, (byte) 0, (byte) -125, (byte) 98, (byte) 28, (byte) -109, (byte) -44, (byte) 90, (byte) -60, (byte) -122, (byte) 17, (byte) 8, (byte) -96, (byte) 12, (byte) 110, (byte) 56, (byte) 122, (byte) 3, (byte) 1, (byte) 115, (byte) 4, (byte) -96, (byte) 48, (byte) -116, (byte) 48, (byte) 44, (byte) -61, (byte) 8, (byte) -60, (byte) 2, (byte) 19, (byte) -80, (byte) 112, (byte) -112, (byte) -121, (byte) 118, (byte) -80, (byte) -121, (byte) 59, (byte) 104, (byte) 3, (byte) 119, (byte) 120, (byte) 7, (byte) 119, (byte) 40, (byte) -121, (byte) 54, (byte) 96, (byte) -121, (byte) 116, (byte) 112, (byte) -121, (byte) 122, (byte) -64, (byte) -121, (byte) 54, (byte) 56, (byte) 7, (byte) 119, (byte) -88, (byte) -121, (byte) 114, (byte) 8, (byte) 7, (byte) 113, (byte) 72, (byte) -121, (byte) 13, (byte) 100, (byte) 80, (byte) 14, (byte) 109, (byte) 0, (byte) 15, (byte) 122, (byte) 48, (byte) 7, (byte) 114, (byte) -96, (byte) 7, (byte) 115, (byte) 32, (byte) 7, (byte) 109, (byte) -112, (byte) 14, (byte) 118, (byte) 64, (byte) 7, (byte) 122, (byte) 96, (byte) 7, (byte) 116, (byte) -48, (byte) 6, (byte) -10, (byte) 16, (byte) 7, (byte) 114, Byte.MIN_VALUE, (byte) 7, (byte) 122, (byte) 96, (byte) 7, (byte) 116, (byte) -96, (byte) 7, (byte) 113, (byte) 32, (byte) 7, (byte) 120, (byte) -48, (byte) 6, (byte) -18, (byte) 48, (byte) 7, (byte) 114, (byte) -48, (byte) 6, (byte) -77, (byte) 96, (byte) 7, (byte) 116, (byte) -96, (byte) -13, (byte) 64, (byte) -122, (byte) 4, (byte) 50, (byte) 66, (byte) 68, (byte) 4, (byte) -32, (byte) 36, (byte) 56, (byte) -51, (byte) -64, (byte) -121, (byte) 40, (byte) 13, (byte) 0, (byte) 0, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 48, (byte) 68, (byte) -127, Byte.MIN_VALUE, (byte) 0, (byte) 16, (byte) 0, (byte) 0, (byte) 0, Byte.MIN_VALUE, (byte) 44, (byte) 16, (byte) 0, (byte) 0, (byte) 0, (byte) 8, (byte) 0, (byte) 0, (byte) 0, (byte) 50, (byte) 30, (byte) -104, (byte) 16, (byte) 25, (byte) 17, (byte) 76, (byte) -112, (byte) -116, (byte) 9, (byte) 38, (byte) 71, (byte) -58, (byte) 4, (byte) 67, (byte) -110, (byte) 35, (byte) 0, (byte) 84, (byte) 70, (byte) 0, (byte) 104, (byte) -107, (byte) 64, (byte) 33, (byte) -112, (byte) 24, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 121, (byte) 24, (byte) 0, (byte) 0, (byte) -126, (byte) 0, (byte) 0, (byte) 0, (byte) 67, (byte) -116, (byte) -59, (byte) -120, (byte) -126, (byte) -27, (byte) 88, (byte) -96, (byte) -36, (byte) -61, (byte) 56, (byte) -96, (byte) 67, (byte) 56, (byte) -56, (byte) -61, (byte) 47, (byte) -52, (byte) 67, (byte) 58, (byte) -24, (byte) 67, (byte) 57, (byte) 12, (byte) 49, (byte) 22, (byte) 35, (byte) 26, (byte) -106, (byte) 99, (byte) 65, (byte) -45, (byte) 14, (byte) -23, (byte) -32, (byte) 14, (byte) -65, (byte) 80, (byte) 14, (byte) -18, (byte) 80, (byte) 15, (byte) -19, (byte) -16, (byte) 11, (byte) -13, (byte) -112, (byte) 14, (byte) -6, (byte) 80, (byte) 14, (byte) 67, (byte) -124, (byte) -88, (byte) 88, (byte) 32, (byte) -115, (byte) 3, (byte) 59, (byte) -124, (byte) -125, (byte) 59, (byte) -100, (byte) 3, (byte) 24, (byte) -40, (byte) 67, (byte) 57, (byte) -56, (byte) -61, (byte) 60, (byte) -92, (byte) -61, (byte) 59, (byte) -72, (byte) 3, (byte) 24, (byte) -52, (byte) -127, (byte) 27, (byte) -44, (byte) 1, (byte) 24, (byte) 12, (byte) 33, (byte) -94, (byte) 35, (byte) 66, (byte) 22, (byte) 28, (byte) -10, (byte) 80, (byte) 14, (byte) -14, (byte) 48, (byte) 15, (byte) -23, (byte) -16, (byte) 14, (byte) -18, (byte) -80, (byte) 32, (byte) -120, (byte) -125, (byte) 33, (byte) 68, (byte) -92, (byte) 68, (byte) -53, (byte) -126, (byte) 72, (byte) 29, (byte) -62, (byte) -63, (byte) 30, (byte) -62, (byte) -31, (byte) 23, (byte) -32, (byte) 33, (byte) 28, (byte) -58, (byte) 97, (byte) 29, (byte) -62, (byte) -31, (byte) 28, (byte) -54, (byte) -31, (byte) 23, (byte) -36, (byte) 33, (byte) 28, (byte) -38, (byte) -95, (byte) 28, (byte) 22, (byte) 88, (byte) -29, (byte) -16, (byte) 14, (byte) -19, (byte) -32, (byte) 6, (byte) -21, (byte) -16, (byte) 14, (byte) -11, (byte) 48, (byte) 15, (byte) -24, (byte) -112, (byte) 14, (byte) -21, (byte) 64, (byte) 14, (byte) -11, (byte) 64, (byte) 15, (byte) -12, (byte) 16, (byte) 14, (byte) 110, (byte) 96, (byte) 15, (byte) -7, (byte) 48, (byte) 15, (byte) -17, (byte) 32, (byte) 15, (byte) 67, (byte) -120, (byte) -88, (byte) -119, (byte) -100, (byte) 5, (byte) -48, (byte) 57, (byte) -48, (byte) -126, (byte) 60, (byte) -124, (byte) -125, (byte) 59, (byte) -52, (byte) -125, (byte) 57, (byte) -68, (byte) -125, (byte) 60, (byte) -76, (byte) 67, (byte) 43, (byte) -124, (byte) 3, (byte) 61, (byte) -56, (byte) 67, (byte) 58, (byte) -32, (byte) -61, (byte) 2, (byte) 33, (byte) 14, (byte) -18, (byte) 96, (byte) 8, (byte) 17, (byte) 65, (byte) 81, (byte) -76, (byte) 64, (byte) 57, (byte) 7, (byte) 90, (byte) -112, (byte) -121, (byte) 112, (byte) 112, (byte) -121, (byte) 121, (byte) 96, (byte) -121, (byte) 112, (byte) -96, (byte) -121, (byte) 114, (byte) 88, (byte) 96, (byte) -44, (byte) -61, (byte) 56, (byte) -96, (byte) 67, (byte) 56, (byte) -56, (byte) 3, (byte) 29, (byte) 12, (byte) 17, (byte) -94, (byte) 105, (byte) 1, (byte) 33, (byte) 15, (byte) -17, (byte) -16, (byte) 14, (byte) -12, (byte) 48, (byte) 68, (byte) -120, (byte) -86, (byte) 5, (byte) -62, (byte) 28, (byte) -60, (byte) -63, (byte) 16, (byte) 35, (byte) -70, (byte) -94, (byte) 75, (byte) 34, (byte) -122, (byte) 24, (byte) 17, (byte) 22, (byte) 101, (byte) 18, (byte) -79, (byte) -32, (byte) 121, (byte) -121, (byte) 118, (byte) 112, (byte) -121, (byte) 116, Byte.MIN_VALUE, (byte) -121, (byte) 119, (byte) -96, (byte) -121, (byte) 114, (byte) 112, (byte) 7, (byte) 122, (byte) 0, (byte) -125, (byte) 113, (byte) 64, (byte) -121, (byte) 112, (byte) -112, (byte) -121, (byte) 33, (byte) 66, (byte) -92, (byte) 45, (byte) -120, (byte) 102, (byte) 33, (byte) 29, (byte) -38, (byte) 1, (byte) 30, (byte) -40, (byte) -95, (byte) 28, (byte) -64, (byte) 96, (byte) 20, (byte) -34, (byte) 96, (byte) 20, (byte) -42, (byte) 96, (byte) 13, (byte) -64, Byte.MIN_VALUE, (byte) 22, (byte) 68, (byte) 33, (byte) 20, (byte) 66, (byte) 97, (byte) 68, (byte) -60, (byte) 14, (byte) -20, (byte) 96, (byte) 15, (byte) -19, (byte) -32, (byte) 6, (byte) -19, (byte) -16, (byte) 14, (byte) -28, (byte) 80, (byte) 15, (byte) -20, (byte) 80, (byte) 14, (byte) 110, (byte) 96, (byte) 14, (byte) -20, (byte) 16, (byte) 14, (byte) -25, (byte) 48, (byte) 15, (byte) 83, (byte) 4, (byte) 64, (byte) 24, (byte) -95, (byte) -80, (byte) 3, (byte) 59, (byte) -40, (byte) 67, (byte) 59, (byte) -72, (byte) 65, (byte) 58, (byte) -112, (byte) 67, (byte) 57, (byte) -72, (byte) 3, (byte) 61, (byte) 76, (byte) 9, (byte) -120, (byte) 17, (byte) -57, (byte) 24, (byte) -64, (byte) -125, (byte) 60, (byte) -124, (byte) -61, (byte) 57, (byte) -76, (byte) 67, (byte) 56, (byte) 76, (byte) 17, (byte) -116, (byte) 100, (byte) -124, (byte) 51, (byte) 6, (byte) -14, (byte) 48, (byte) 15, (byte) -65, (byte) 80, (byte) 14, (byte) -8, (byte) 0, (byte) 15, (byte) -17, (byte) 32, (byte) 15, (byte) -12, (byte) -16, (byte) 11, (byte) -10, (byte) 16, (byte) 14, (byte) -14, (byte) 48, (byte) 69, (byte) 96, (byte) -98, (byte) 17, (byte) -48, (byte) 24, (byte) -56, (byte) -61, (byte) 60, (byte) -4, (byte) -62, (byte) 59, (byte) -120, (byte) -125, (byte) 58, (byte) -108, (byte) -61, (byte) 56, (byte) -48, (byte) -61, (byte) 47, (byte) -52, (byte) 3, (byte) 59, (byte) -68, (byte) 3, (byte) 61, (byte) -52, (byte) -61, (byte) 20, (byte) 96, (byte) -60, (byte) 53, (byte) 6, (byte) -14, (byte) 48, (byte) 15, (byte) -65, (byte) 80, (byte) 14, (byte) -8, (byte) 0, (byte) 15, (byte) -17, (byte) 32, (byte) 15, (byte) -12, (byte) -16, (byte) 11, (byte) -26, (byte) -16, (byte) 14, (byte) -14, (byte) 80, (byte) 14, (byte) -31, (byte) 48, (byte) 14, (byte) -24, (byte) -16, (byte) 11, (byte) -18, (byte) 16, (byte) 14, (byte) -19, (byte) 80, (byte) 14, (byte) 83, (byte) 2, (byte) 105, (byte) -124, (byte) 52, (byte) 6, (byte) -14, (byte) 48, (byte) 15, (byte) -65, (byte) 80, (byte) 14, (byte) -8, (byte) 0, (byte) 15, (byte) -17, (byte) 32, (byte) 15, (byte) -12, (byte) -16, (byte) 11, (byte) -26, (byte) -16, (byte) 14, (byte) -14, (byte) 80, (byte) 14, (byte) -31, (byte) 48, (byte) 14, (byte) -24, (byte) 48, (byte) 37, (byte) -96, (byte) 0, (byte) 0, (byte) 0, (byte) 121, (byte) 24, (byte) 0, (byte) 0, (byte) 23, (byte) 0, (byte) 0, (byte) 0, (byte) 51, (byte) 8, Byte.MIN_VALUE, (byte) 28, (byte) -60, (byte) -31, (byte) 28, (byte) 102, (byte) 20, (byte) 1, (byte) 61, (byte) -120, (byte) 67, (byte) 56, (byte) -124, (byte) -61, (byte) -116, (byte) 66, Byte.MIN_VALUE, (byte) 7, (byte) 121, (byte) 120, (byte) 7, (byte) 115, (byte) -104, (byte) 113, (byte) 12, (byte) -26, (byte) 0, (byte) 15, (byte) -19, (byte) 16, (byte) 14, (byte) -12, Byte.MIN_VALUE, (byte) 14, (byte) 51, (byte) 12, (byte) 66, (byte) 30, (byte) -62, (byte) -63, (byte) 29, (byte) -50, (byte) -95, (byte) 28, (byte) 102, (byte) 48, (byte) 5, (byte) 61, (byte) -120, (byte) 67, (byte) 56, (byte) -124, (byte) -125, (byte) 27, (byte) -52, (byte) 3, (byte) 61, (byte) -56, (byte) 67, (byte) 61, (byte) -116, (byte) 3, (byte) 61, (byte) -52, (byte) 120, (byte) -116, (byte) 116, (byte) 112, (byte) 7, (byte) 123, (byte) 8, (byte) 7, (byte) 121, (byte) 72, (byte) -121, (byte) 112, (byte) 112, (byte) 7, (byte) 122, (byte) 112, (byte) 3, (byte) 118, (byte) 120, (byte) -121, (byte) 112, (byte) 32, (byte) 7, (byte) 0, (byte) 0, (byte) 0, (byte) 113, (byte) 32, (byte) 0, (byte) 0, (byte) 16, (byte) 0, (byte) 0, (byte) 0, (byte) 38, (byte) 64, (byte) 68, (byte) -114, (byte) 51, (byte) -39, (byte) 64, (byte) 26, (byte) -4, (byte) 115, (byte) -83, (byte) 71, (byte) -110, (byte) 9, (byte) 76, (byte) 17, (byte) 114, (byte) -103, (byte) -44, (byte) 50, (byte) 33, (byte) -49, (byte) -126, (byte) -91, (byte) 100, (byte) 109, (byte) 71, (byte) -46, (byte) -49, (byte) 0, (byte) 83, (byte) -124, (byte) 92, (byte) -8, (byte) -123, (byte) 119, (byte) 21, (byte) -2, (byte) 23, (byte) 22, (byte) -96, (byte) 24, (byte) 109, (byte) 4, (byte) 52, (byte) -46, (byte) 2, (byte) 76, (byte) -124, (byte) 1, (byte) 64, (byte) 70, (byte) 27, (byte) 1, (byte) -115, (byte) 84, (byte) 56, (byte) 17, (byte) 99, (byte) 2, (byte) 83, (byte) -124, (byte) 92, (byte) 0, (byte) 97, (byte) 32, (byte) 0, (byte) 0, (byte) 56, (byte) 0, (byte) 0, (byte) 0, (byte) 19, (byte) 4, (byte) 65, (byte) 44, (byte) 16, (byte) 0, (byte) 0, (byte) 0, (byte) 8, (byte) 0, (byte) 0, (byte) 0, (byte) 84, (byte) 102, (byte) 0, (byte) 8, (byte) -51, (byte) 0, (byte) -48, (byte) 26, (byte) 1, (byte) 40, (byte) -125, (byte) 34, (byte) -104, (byte) 1, (byte) 32, (byte) 58, (byte) 7, (byte) 1, (byte) 25, (byte) -46, (byte) 68, (byte) 115, (byte) -84, (byte) 1, (byte) 8, (byte) 6, (byte) 114, (byte) 51, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) -108, (byte) -116, (byte) 49, (byte) -124, (byte) 11, (byte) 58, (byte) 12, (byte) -44, (byte) 28, (byte) -125, (byte) -107, (byte) 65, (byte) 99, (byte) 8, (byte) -105, (byte) 113, (byte) 27, (byte) -88, (byte) 57, (byte) 6, (byte) -115, (byte) 51, (byte) -58, (byte) 16, (byte) 46, (byte) -23, (byte) 60, (byte) 80, (byte) 115, (byte) 12, (byte) -35, (byte) 39, (byte) -115, (byte) 33, (byte) 92, (byte) -47, (byte) -123, (byte) 1, (byte) -88, (byte) 57, (byte) 6, (byte) 48, (byte) 16, (byte) -125, (byte) 104, (byte) -60, (byte) -96, (byte) 24, (byte) -126, (byte) 1, (byte) 24, (byte) -125, (byte) 49, (byte) 4, (byte) 50, Byte.MIN_VALUE, (byte) -82, (byte) 12, (byte) -56, (byte) -52, (byte) 49, (byte) 56, (byte) 102, (byte) 0, (byte) -115, (byte) 33, (byte) -112, (byte) -127, (byte) 113, (byte) 104, (byte) 64, (byte) 102, (byte) -114, (byte) -31, (byte) 12, (byte) -46, (byte) -64, (byte) 24, (byte) 67, (byte) 32, (byte) -125, (byte) -24, (byte) -42, Byte.MIN_VALUE, (byte) -52, (byte) 28, (byte) -125, (byte) 26, (byte) -80, (byte) 65, (byte) 68, (byte) -63, (byte) -88, (byte) 54, (byte) 112, (byte) 3, (byte) 24, (byte) 100, (byte) 120, (byte) 3, (byte) -89, (byte) 26, (byte) 100, Byte.MIN_VALUE, (byte) -125, (byte) -121, (byte) 58, (byte) -59, (byte) -20, (byte) 96, (byte) -124, (byte) 28, (byte) -60, (byte) -63, (byte) 0, (byte) 96, (byte) 56, (byte) 16, (byte) 0, (byte) 0, (byte) 7, (byte) 0, (byte) 0, (byte) 0, (byte) -74, (byte) 112, (byte) 80, (byte) 82, (byte) -44, (byte) 1, (byte) 19, (byte) 96, (byte) 12, (byte) -63, (byte) 101, (byte) 13, (byte) 1, (byte) 102, (byte) 9, (byte) 68, (byte) -11, (byte) 35, (byte) -115, (byte) 41, (byte) 20, (byte) -43, (byte) -17, (byte) 80, (byte) 19, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 49, (byte) 0, (byte) 0, (byte) 4, (byte) 0, (byte) 0, (byte) 0, (byte) 91, (byte) 6, (byte) 32, (byte) -80, (byte) -74, (byte) 12, (byte) 87, (byte) 96, (byte) 109, (byte) 25, (byte) -72, (byte) -64, (byte) 2, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0};
    static final byte[] uchar4to4 = new byte[]{(byte) -34, (byte) -64, (byte) 23, (byte) 11, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 44, (byte) 0, (byte) 0, (byte) 0, (byte) 48, (byte) 5, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 16, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 64, (byte) 4, (byte) 0, (byte) 109, (byte) 7, (byte) 0, (byte) 0, (byte) 2, (byte) 64, (byte) 4, (byte) 0, (byte) 3, (byte) 0, (byte) 0, (byte) 0, (byte) 66, (byte) 67, (byte) -64, (byte) -34, (byte) 33, (byte) 12, (byte) 0, (byte) 0, (byte) 73, (byte) 1, (byte) 0, (byte) 0, (byte) 1, (byte) 16, (byte) 0, (byte) 0, (byte) 18, (byte) 0, (byte) 0, (byte) 0, (byte) 7, (byte) -127, (byte) 35, (byte) -111, (byte) 65, (byte) -56, (byte) 4, (byte) 73, (byte) 6, (byte) 16, (byte) 50, (byte) 57, (byte) -110, (byte) 1, (byte) -124, (byte) 12, (byte) 37, (byte) 5, (byte) 8, (byte) 25, (byte) 30, (byte) 4, (byte) -117, (byte) 98, Byte.MIN_VALUE, (byte) 20, (byte) 69, (byte) 2, (byte) 66, (byte) -110, (byte) 11, (byte) 66, (byte) -92, (byte) 16, (byte) 50, (byte) 20, (byte) 56, (byte) 8, (byte) 24, (byte) 73, (byte) 10, (byte) 50, (byte) 68, (byte) 36, (byte) 72, (byte) 10, (byte) -112, (byte) 33, (byte) 35, (byte) -60, (byte) 82, Byte.MIN_VALUE, (byte) 12, (byte) 25, (byte) 33, (byte) 114, (byte) 36, (byte) 7, (byte) -56, (byte) 72, (byte) 17, (byte) 98, (byte) -88, (byte) -96, (byte) -88, (byte) 64, (byte) -58, (byte) -16, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 73, (byte) 24, (byte) 0, (byte) 0, (byte) 11, (byte) 0, (byte) 0, (byte) 0, (byte) 11, (byte) -112, (byte) 0, (byte) 4, (byte) 65, (byte) 16, (byte) 4, (byte) 9, (byte) 1, (byte) 4, (byte) 65, (byte) 16, (byte) 4, (byte) -119, (byte) 1, (byte) 4, (byte) 65, (byte) 16, (byte) 4, (byte) -119, (byte) -1, (byte) -1, (byte) -1, (byte) -1, (byte) 31, (byte) -64, (byte) 96, (byte) -127, (byte) -16, (byte) -1, (byte) -1, (byte) -1, (byte) -1, (byte) 3, (byte) -80, (byte) 64, (byte) -8, (byte) -1, (byte) -1, (byte) -1, (byte) -1, (byte) 1, (byte) 12, (byte) 0, (byte) -119, (byte) 32, (byte) 0, (byte) 0, (byte) 23, (byte) 0, (byte) 0, (byte) 0, (byte) 50, (byte) 34, (byte) 72, (byte) 9, (byte) 32, (byte) 100, (byte) -123, (byte) 4, (byte) -109, (byte) 34, (byte) -92, (byte) -124, (byte) 4, (byte) -109, (byte) 34, (byte) -29, (byte) -124, (byte) -95, (byte) -112, (byte) 20, (byte) 18, (byte) 76, (byte) -118, (byte) -116, (byte) 11, (byte) -124, (byte) -92, (byte) 76, (byte) 16, (byte) 68, (byte) 51, (byte) 0, (byte) 9, (byte) 1, (byte) -82, (byte) -110, (byte) -90, (byte) -120, (byte) 18, (byte) 38, (byte) 63, (byte) -110, (byte) 126, (byte) 6, (byte) -104, (byte) 34, (byte) -28, (byte) -62, (byte) 47, (byte) -36, (byte) -73, (byte) 81, (byte) 16, (byte) 72, (byte) -52, (byte) 17, (byte) 32, (byte) -61, (byte) 8, (byte) 4, (byte) 65, (byte) 101, (byte) 4, Byte.MIN_VALUE, (byte) -56, (byte) 28, (byte) 1, (byte) 24, (byte) 20, (byte) -29, (byte) 24, (byte) -125, (byte) 82, (byte) 34, (byte) 53, (byte) -116, (byte) 64, (byte) 0, (byte) 101, (byte) 96, (byte) -125, (byte) 81, (byte) 27, (byte) 8, (byte) -104, (byte) 35, (byte) 0, (byte) 5, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 19, (byte) -80, (byte) 112, (byte) -112, (byte) -121, (byte) 118, (byte) -80, (byte) -121, (byte) 59, (byte) 104, (byte) 3, (byte) 119, (byte) 120, (byte) 7, (byte) 119, (byte) 40, (byte) -121, (byte) 54, (byte) 96, (byte) -121, (byte) 116, (byte) 112, (byte) -121, (byte) 122, (byte) -64, (byte) -121, (byte) 54, (byte) 56, (byte) 7, (byte) 119, (byte) -88, (byte) -121, (byte) 114, (byte) 8, (byte) 7, (byte) 113, (byte) 72, (byte) -121, (byte) 13, (byte) 100, (byte) 80, (byte) 14, (byte) 109, (byte) 0, (byte) 15, (byte) 122, (byte) 48, (byte) 7, (byte) 114, (byte) -96, (byte) 7, (byte) 115, (byte) 32, (byte) 7, (byte) 109, (byte) -112, (byte) 14, (byte) 118, (byte) 64, (byte) 7, (byte) 122, (byte) 96, (byte) 7, (byte) 116, (byte) -48, (byte) 6, (byte) -10, (byte) 16, (byte) 7, (byte) 114, Byte.MIN_VALUE, (byte) 7, (byte) 122, (byte) 96, (byte) 7, (byte) 116, (byte) -96, (byte) 7, (byte) 113, (byte) 32, (byte) 7, (byte) 120, (byte) -48, (byte) 6, (byte) -18, (byte) 48, (byte) 7, (byte) 114, (byte) -48, (byte) 6, (byte) -77, (byte) 96, (byte) 7, (byte) 116, (byte) -96, (byte) -13, (byte) 64, (byte) -122, (byte) 4, (byte) 50, (byte) 66, (byte) 68, (byte) 4, (byte) -32, (byte) 36, (byte) 56, (byte) -51, (byte) -64, (byte) -121, (byte) 40, (byte) 11, (byte) 0, (byte) 0, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 48, (byte) 68, (byte) 113, Byte.MIN_VALUE, (byte) 0, (byte) 16, (byte) 0, (byte) 0, (byte) 0, Byte.MIN_VALUE, (byte) 44, (byte) 16, (byte) 0, (byte) 0, (byte) 0, (byte) 8, (byte) 0, (byte) 0, (byte) 0, (byte) 50, (byte) 30, (byte) -104, (byte) 16, (byte) 25, (byte) 17, (byte) 76, (byte) -112, (byte) -116, (byte) 9, (byte) 38, (byte) 71, (byte) -58, (byte) 4, (byte) 67, (byte) -126, (byte) 35, (byte) 0, (byte) 84, (byte) 70, (byte) 0, (byte) 40, (byte) -107, (byte) 64, (byte) 33, (byte) -112, (byte) 24, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 121, (byte) 24, (byte) 0, (byte) 0, (byte) -126, (byte) 0, (byte) 0, (byte) 0, (byte) 67, (byte) -116, (byte) -60, (byte) 120, (byte) -126, (byte) -28, (byte) 88, (byte) -96, (byte) -36, (byte) -61, (byte) 56, (byte) -96, (byte) 67, (byte) 56, (byte) -56, (byte) -61, (byte) 47, (byte) -52, (byte) 67, (byte) 58, (byte) -24, (byte) 67, (byte) 57, (byte) 12, (byte) 49, (byte) 18, (byte) -29, (byte) 25, (byte) -110, (byte) 99, (byte) 65, (byte) -45, (byte) 14, (byte) -23, (byte) -32, (byte) 14, (byte) -65, (byte) 80, (byte) 14, (byte) -18, (byte) 80, (byte) 15, (byte) -19, (byte) -16, (byte) 11, (byte) -13, (byte) -112, (byte) 14, (byte) -6, (byte) 80, (byte) 14, (byte) 67, (byte) -124, (byte) -89, (byte) 88, (byte) 32, (byte) -115, (byte) 3, (byte) 59, (byte) -124, (byte) -125, (byte) 59, (byte) -100, (byte) 3, (byte) 24, (byte) -40, (byte) 67, (byte) 57, (byte) -56, (byte) -61, (byte) 60, (byte) -92, (byte) -61, (byte) 59, (byte) -72, (byte) 3, (byte) 24, (byte) -52, (byte) -127, (byte) 27, (byte) -44, (byte) 1, (byte) 24, (byte) 12, (byte) 33, (byte) -98, (byte) -29, (byte) 65, (byte) 22, (byte) 28, (byte) -10, (byte) 80, (byte) 14, (byte) -14, (byte) 48, (byte) 15, (byte) -23, (byte) -16, (byte) 14, (byte) -18, (byte) -80, (byte) 32, (byte) -120, (byte) -125, (byte) 33, (byte) -60, (byte) -93, (byte) 60, (byte) -53, (byte) -126, (byte) 72, (byte) 29, (byte) -62, (byte) -63, (byte) 30, (byte) -62, (byte) -31, (byte) 23, (byte) -32, (byte) 33, (byte) 28, (byte) -58, (byte) 97, (byte) 29, (byte) -62, (byte) -31, (byte) 28, (byte) -54, (byte) -31, (byte) 23, (byte) -36, (byte) 33, (byte) 28, (byte) -38, (byte) -95, (byte) 28, (byte) 22, (byte) 88, (byte) -29, (byte) -16, (byte) 14, (byte) -19, (byte) -32, (byte) 6, (byte) -21, (byte) -16, (byte) 14, (byte) -11, (byte) 48, (byte) 15, (byte) -24, (byte) -112, (byte) 14, (byte) -21, (byte) 64, (byte) 14, (byte) -11, (byte) 64, (byte) 15, (byte) -12, (byte) 16, (byte) 14, (byte) 110, (byte) 96, (byte) 15, (byte) -7, (byte) 48, (byte) 15, (byte) -17, (byte) 32, (byte) 15, (byte) 67, (byte) -120, (byte) -89, (byte) 121, (byte) -100, (byte) 5, (byte) -48, (byte) 57, (byte) -48, (byte) -126, (byte) 60, (byte) -124, (byte) -125, (byte) 59, (byte) -52, (byte) -125, (byte) 57, (byte) -68, (byte) -125, (byte) 60, (byte) -76, (byte) 67, (byte) 43, (byte) -124, (byte) 3, (byte) 61, (byte) -56, (byte) 67, (byte) 58, (byte) -32, (byte) -61, (byte) 2, (byte) 33, (byte) 14, (byte) -18, (byte) 96, (byte) 8, (byte) -15, (byte) 64, (byte) 79, (byte) -76, (byte) 64, (byte) 57, (byte) 7, (byte) 90, (byte) -112, (byte) -121, (byte) 112, (byte) 112, (byte) -121, (byte) 121, (byte) 96, (byte) -121, (byte) 112, (byte) -96, (byte) -121, (byte) 114, (byte) 88, (byte) 96, (byte) -44, (byte) -61, (byte) 56, (byte) -96, (byte) 67, (byte) 56, (byte) -56, (byte) 3, (byte) 29, (byte) 12, (byte) 17, (byte) -98, (byte) 105, (byte) 1, (byte) 33, (byte) 15, (byte) -17, (byte) -16, (byte) 14, (byte) -12, (byte) 48, (byte) 68, (byte) 120, (byte) -86, (byte) 5, (byte) -62, (byte) 28, (byte) -60, (byte) -63, (byte) 16, (byte) -29, (byte) -71, (byte) -98, (byte) 11, (byte) 34, (byte) -122, (byte) 24, (byte) 15, (byte) -10, (byte) 100, (byte) 16, (byte) -79, (byte) -32, (byte) 121, (byte) -121, (byte) 118, (byte) 112, (byte) -121, (byte) 116, Byte.MIN_VALUE, (byte) -121, (byte) 119, (byte) -96, (byte) -121, (byte) 114, (byte) 112, (byte) 7, (byte) 122, (byte) 0, (byte) -125, (byte) 113, (byte) 64, (byte) -121, (byte) 112, (byte) -112, (byte) -121, (byte) 33, (byte) -62, (byte) -93, (byte) 45, (byte) -120, (byte) 102, (byte) 33, (byte) 29, (byte) -38, (byte) 1, (byte) 30, (byte) -40, (byte) -95, (byte) 28, (byte) -64, (byte) 96, (byte) 20, (byte) -34, (byte) 96, (byte) 20, (byte) -42, (byte) 96, (byte) 13, (byte) -64, Byte.MIN_VALUE, (byte) 22, (byte) 68, (byte) 33, (byte) 20, (byte) 66, (byte) 97, (byte) 68, (byte) -60, (byte) 14, (byte) -20, (byte) 96, (byte) 15, (byte) -19, (byte) -32, (byte) 6, (byte) -19, (byte) -16, (byte) 14, (byte) -28, (byte) 80, (byte) 15, (byte) -20, (byte) 80, (byte) 14, (byte) 110, (byte) 96, (byte) 14, (byte) -20, (byte) 16, (byte) 14, (byte) -25, (byte) 48, (byte) 15, (byte) 83, (byte) 4, (byte) 64, (byte) 24, (byte) -95, (byte) -80, (byte) 3, (byte) 59, (byte) -40, (byte) 67, (byte) 59, (byte) -72, (byte) 65, (byte) 58, (byte) -112, (byte) 67, (byte) 57, (byte) -72, (byte) 3, (byte) 61, (byte) 76, (byte) 9, (byte) -120, (byte) 17, (byte) -57, (byte) 24, (byte) -64, (byte) -125, (byte) 60, (byte) -124, (byte) -61, (byte) 57, (byte) -76, (byte) 67, (byte) 56, (byte) 76, (byte) 17, (byte) -116, (byte) 100, (byte) -124, (byte) 51, (byte) 6, (byte) -14, (byte) 48, (byte) 15, (byte) -65, (byte) 80, (byte) 14, (byte) -8, (byte) 0, (byte) 15, (byte) -17, (byte) 32, (byte) 15, (byte) -12, (byte) -16, (byte) 11, (byte) -10, (byte) 16, (byte) 14, (byte) -14, (byte) 48, (byte) 69, (byte) 96, (byte) -98, (byte) 17, (byte) -48, (byte) 24, (byte) -56, (byte) -61, (byte) 60, (byte) -4, (byte) -62, (byte) 59, (byte) -120, (byte) -125, (byte) 58, (byte) -108, (byte) -61, (byte) 56, (byte) -48, (byte) -61, (byte) 47, (byte) -52, (byte) 3, (byte) 59, (byte) -68, (byte) 3, (byte) 61, (byte) -52, (byte) -61, (byte) 20, (byte) 96, (byte) -60, (byte) 53, (byte) 6, (byte) -14, (byte) 48, (byte) 15, (byte) -65, (byte) 80, (byte) 14, (byte) -8, (byte) 0, (byte) 15, (byte) -17, (byte) 32, (byte) 15, (byte) -12, (byte) -16, (byte) 11, (byte) -26, (byte) -16, (byte) 14, (byte) -14, (byte) 80, (byte) 14, (byte) -31, (byte) 48, (byte) 14, (byte) -24, (byte) -16, (byte) 11, (byte) -18, (byte) 16, (byte) 14, (byte) -19, (byte) 80, (byte) 14, (byte) 83, (byte) 2, (byte) 105, (byte) -124, (byte) 52, (byte) 6, (byte) -14, (byte) 48, (byte) 15, (byte) -65, (byte) 80, (byte) 14, (byte) -8, (byte) 0, (byte) 15, (byte) -17, (byte) 32, (byte) 15, (byte) -12, (byte) -16, (byte) 11, (byte) -26, (byte) -16, (byte) 14, (byte) -14, (byte) 80, (byte) 14, (byte) -31, (byte) 48, (byte) 14, (byte) -24, (byte) 48, (byte) 37, (byte) -96, (byte) 0, (byte) 0, (byte) 0, (byte) 121, (byte) 24, (byte) 0, (byte) 0, (byte) 23, (byte) 0, (byte) 0, (byte) 0, (byte) 51, (byte) 8, Byte.MIN_VALUE, (byte) 28, (byte) -60, (byte) -31, (byte) 28, (byte) 102, (byte) 20, (byte) 1, (byte) 61, (byte) -120, (byte) 67, (byte) 56, (byte) -124, (byte) -61, (byte) -116, (byte) 66, Byte.MIN_VALUE, (byte) 7, (byte) 121, (byte) 120, (byte) 7, (byte) 115, (byte) -104, (byte) 113, (byte) 12, (byte) -26, (byte) 0, (byte) 15, (byte) -19, (byte) 16, (byte) 14, (byte) -12, Byte.MIN_VALUE, (byte) 14, (byte) 51, (byte) 12, (byte) 66, (byte) 30, (byte) -62, (byte) -63, (byte) 29, (byte) -50, (byte) -95, (byte) 28, (byte) 102, (byte) 48, (byte) 5, (byte) 61, (byte) -120, (byte) 67, (byte) 56, (byte) -124, (byte) -125, (byte) 27, (byte) -52, (byte) 3, (byte) 61, (byte) -56, (byte) 67, (byte) 61, (byte) -116, (byte) 3, (byte) 61, (byte) -52, (byte) 120, (byte) -116, (byte) 116, (byte) 112, (byte) 7, (byte) 123, (byte) 8, (byte) 7, (byte) 121, (byte) 72, (byte) -121, (byte) 112, (byte) 112, (byte) 7, (byte) 122, (byte) 112, (byte) 3, (byte) 118, (byte) 120, (byte) -121, (byte) 112, (byte) 32, (byte) 7, (byte) 0, (byte) 0, (byte) 0, (byte) 113, (byte) 32, (byte) 0, (byte) 0, (byte) 16, (byte) 0, (byte) 0, (byte) 0, (byte) 38, (byte) 64, (byte) 68, (byte) -114, (byte) 51, (byte) -39, (byte) 64, (byte) 26, (byte) -4, (byte) 115, (byte) -83, (byte) 71, (byte) -110, (byte) 9, (byte) 76, (byte) 17, (byte) 114, (byte) -103, (byte) -44, (byte) 50, (byte) 33, (byte) -49, (byte) -126, (byte) -91, (byte) 100, (byte) 109, (byte) 71, (byte) -46, (byte) -49, (byte) 0, (byte) 83, (byte) -124, (byte) 92, (byte) -8, (byte) -123, (byte) 119, (byte) 21, (byte) -2, (byte) 23, (byte) 22, (byte) -96, (byte) 24, (byte) 109, (byte) 4, (byte) 52, (byte) -46, (byte) 2, (byte) 76, (byte) -124, (byte) 1, (byte) 64, (byte) 70, (byte) 27, (byte) 1, (byte) -115, (byte) 84, (byte) 56, (byte) 17, (byte) 99, (byte) 2, (byte) 83, (byte) -124, (byte) 92, (byte) 0, (byte) 97, (byte) 32, (byte) 0, (byte) 0, (byte) 51, (byte) 0, (byte) 0, (byte) 0, (byte) 19, (byte) 4, (byte) 65, (byte) 44, (byte) 16, (byte) 0, (byte) 0, (byte) 0, (byte) 4, (byte) 0, (byte) 0, (byte) 0, (byte) 84, (byte) 102, (byte) 0, (byte) 40, (byte) -115, (byte) 0, (byte) 20, (byte) 65, (byte) 25, (byte) 16, (byte) -101, (byte) 1, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) -108, (byte) -116, (byte) 49, (byte) -124, (byte) -23, (byte) 57, (byte) 10, (byte) -44, (byte) 28, (byte) -125, (byte) 84, (byte) 61, (byte) 99, (byte) 8, (byte) -109, (byte) 113, (byte) 23, (byte) -88, (byte) 57, (byte) 6, (byte) 11, (byte) 51, (byte) -58, (byte) 16, (byte) 38, (byte) -24, (byte) 52, (byte) 80, (byte) 115, (byte) 12, (byte) -39, (byte) 6, (byte) -115, (byte) 33, (byte) 76, (byte) -47, (byte) 117, (byte) -96, (byte) -26, (byte) 24, (byte) 56, (byte) 47, (byte) 26, (byte) 49, (byte) 40, (byte) -122, (byte) 96, (byte) 0, (byte) -66, (byte) 49, (byte) 4, (byte) 48, (byte) 120, (byte) 46, (byte) 12, (byte) -56, (byte) -52, (byte) 49, (byte) 56, (byte) 98, (byte) -16, (byte) -116, (byte) 33, Byte.MIN_VALUE, (byte) -127, (byte) 113, (byte) 100, (byte) 64, (byte) 102, (byte) -114, (byte) 97, (byte) 12, (byte) -54, (byte) -64, (byte) 24, (byte) 67, (byte) 0, (byte) 3, (byte) -24, (byte) -50, Byte.MIN_VALUE, (byte) -52, (byte) 28, (byte) -125, (byte) 25, (byte) -96, (byte) 1, (byte) 52, (byte) -122, (byte) 0, (byte) 6, (byte) -47, (byte) -87, (byte) 1, (byte) -103, (byte) 57, (byte) -122, (byte) 52, (byte) 88, (byte) -125, (byte) -120, (byte) -126, (byte) 81, (byte) 108, (byte) -48, (byte) 6, (byte) 48, (byte) 24, (byte) -95, (byte) -72, (byte) -63, (byte) 0, (byte) 96, (byte) 56, (byte) 16, (byte) 0, (byte) 7, (byte) 0, (byte) 0, (byte) 0, (byte) -74, (byte) 112, (byte) 80, (byte) 82, (byte) -44, (byte) 1, (byte) 19, (byte) 96, (byte) 12, (byte) -63, (byte) 101, (byte) 13, (byte) 1, (byte) 102, (byte) 9, (byte) 68, (byte) -11, (byte) 35, (byte) -115, (byte) 41, (byte) 20, (byte) -43, (byte) -17, (byte) 80, (byte) 19, (byte) 0, (byte) 0, (byte) 0, (byte) 1, (byte) 49, (byte) 0, (byte) 0, (byte) 4, (byte) 0, (byte) 0, (byte) 0, (byte) 91, (byte) 6, (byte) 32, (byte) -80, (byte) -74, (byte) 12, (byte) 90, (byte) 96, (byte) 109, (byte) 25, (byte) -72, (byte) -64, (byte) 2, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0};

    static final byte[][] byteCodes = new byte[][]{uchar4to1, uchar4to2, uchar4to3, uchar4to4};

    RenderScript rs;
    ScriptC_uchar4ToX s;
    byte[] temp;

    public static ColorMatrix getRgbToYuvColorMatrix() {
        return new ColorMatrix(new float[]{0.299f, 0.587f, 0.114f, 0.0f, 0.0f, -0.169f, -0.331f, 0.5f, 0.0f, 128.0f, 0.5f, -0.419f, -0.081f, 0.0f, 128.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f});
    }

    private static Bitmap getPlane(Bitmap bitmap, int width, int height, float[] postShifter) {
        ColorMatrix cm = getRgbToYuvColorMatrix();
        cm.postConcat(new ColorMatrix(postShifter));
        Paint p = new Paint();
        p.setXfermode(new PorterDuffXfermode(Mode.SRC));
        p.setColorFilter(new ColorMatrixColorFilter(cm));
        Bitmap plane = Bitmap.createBitmap(width, height, Config.ALPHA_8);
        Canvas c = new Canvas(plane);
        if (width == bitmap.getWidth() && height == bitmap.getHeight()) {
            c.drawBitmap(bitmap, 0.0f, 0.0f, p);
        } else {
            c.drawBitmap(bitmap, new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight()), new Rect(0, 0, width, height), p);
        }
        return plane;
    }

    public static Bitmap getYPlane(Bitmap bitmap, int width, int height) {
        return getPlane(bitmap, width, height, new float[]{1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f});
    }

    public static void getYPlane(Bitmap bitmap, ByteBuffer buffer) {
        getYPlane(bitmap, bitmap.getWidth(), bitmap.getHeight()).copyPixelsToBuffer(buffer);
    }

    static {
        try {
            if (VERSION.SDK_INT < 18) {
                create = RenderScript.class.getDeclaredMethod("create", new Class[]{Context.class, Integer.TYPE});
            } else if (VERSION.SDK_INT < 21) {
                create = RenderScript.class.getDeclaredMethod("create", new Class[]{Context.class, Integer.TYPE, ContextType.class});
            } else {
                create = RenderScript.class.getDeclaredMethod("create", new Class[]{Context.class, Integer.TYPE, ContextType.class, Integer.TYPE});
            }
            create.setAccessible(true);
        } catch (Exception e) {
            throw new AssertionError(e);
        }
    }

    private static RenderScript create() {
        try {
            if (VERSION.SDK_INT < 18) {
                return (RenderScript) create.invoke(null, new Object[]{context, Integer.valueOf(16)});
            } else if (VERSION.SDK_INT < 21) {
                return (RenderScript) create.invoke(null, new Object[]{context, Integer.valueOf(16), ContextType.NORMAL});
            } else {
                return (RenderScript) create.invoke(null, new Object[]{context, Integer.valueOf(16), ContextType.NORMAL, Integer.valueOf(0)});
            }
        } catch (Exception e) {
            throw new AssertionError(e);
        }
    }

//    public static byte[] getBytes(int resource) {
//        if (context == null) {
//            switch (resource) {
//                case R.raw.uchar4to1:
//                    return uchar4to1;
//                case R.raw.uchar4to2:
//                    return uchar4to2;
//                case R.raw.uchar4to3:
//                    return uchar4to3;
//                case R.raw.uchar4to4:
//                    return uchar4to4;
//                default:
//                    throw new AssertionError("bytecode not found");
//            }
//        }
//        try {
//            return StreamUtility.readToEndAsArray(context.getResources().openRawResource(resource));
//        } catch (Exception e) {
//            throw new AssertionError(e);
//        }
//    }

//    public static void printBytes() throws Exception {
//        DataOutputStream fout = new DataOutputStream(new FileOutputStream("/sdcard/bytes.txt"));
//        for (int i = 0; i < resources.length; i++) {
//            fout.writeBytes("final static byte[] uchar4to" + (i + 1) + " = new byte[] {\n");
//            fout.writeBytes(Arrays.toString(getBytes(resources[i])).replace("[", "").replace("]", ""));
//            fout.writeBytes("};\n\n");
//        }
//        fout.close();
//    }

    private static ScriptC_uchar4ToX get4To1(RenderScript rs) {
        return new ScriptC_uchar4ToX(rs, "uchar4to1", Element.U8(rs), uchar4to1, TMP);
    }

    private static ScriptC_uchar4ToX get4To2(RenderScript rs) {
        return new ScriptC_uchar4ToX(rs, "uchar4to2", Element.U8_2(rs), uchar4to2, TMP);
    }

    private static ScriptC_uchar4ToX get4To3(RenderScript rs) {
        return new ScriptC_uchar4ToX(rs, "uchar4to3", Element.U8_3(rs), uchar4to3, TMP);
    }

    private static ScriptC_uchar4ToX get4To4(RenderScript rs) {
        return new ScriptC_uchar4ToX(rs, "uchar4to4", Element.U8_4(rs), uchar4to4, TMP);
    }

    private YuvConverter(RenderScript rs, ScriptC_uchar4ToX s) {
        this.rs = rs;
        this.s = s;
    }

    public static YuvConverter createYPlaneConverter() {
        RenderScript rs = create();
        ScriptC_uchar4ToX s = get4To1(rs);
        s.set_gTransformMatrix(new Matrix4f(new float[]{0.299f, -0.169f, 0.5f, 0.0f, 0.587f, -0.331f, -0.419f, 0.0f, 0.114f, 0.5f, -0.081f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f}));
        s.set_gTranslate(new Short4((short) 0, (short) 0, (short) 0, (short) 0));
        return new YuvConverter(rs, s);
    }

    public static YuvConverter createUVConverter() {
        RenderScript rs = create();
        ScriptC_uchar4ToX s = get4To2(rs);
        s.set_gTransformMatrix(new Matrix4f(new float[]{-0.169f, 0.5f, 0.299f, 0.0f, -0.331f, -0.419f, 0.587f, 0.0f, 0.5f, -0.081f, 0.114f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f}));
        s.set_gTranslate(new Short4((short) 128, (short) 128, (short) 0, (short) 0));
        return new YuvConverter(rs, s);
    }

    public static YuvConverter createUConverter() {
        RenderScript rs = create();
        ScriptC_uchar4ToX s = get4To1(rs);
        s.set_gTransformMatrix(new Matrix4f(new float[]{-0.169f, 0.5f, 0.299f, 0.0f, -0.331f, -0.419f, 0.587f, 0.0f, 0.5f, -0.081f, 0.114f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f}));
        s.set_gTranslate(new Short4((short) 128, (short) 128, (short) 0, (short) 0));
        return new YuvConverter(rs, s);
    }

    public static YuvConverter createVUConverter() {
        RenderScript rs = create();
        ScriptC_uchar4ToX s = get4To2(rs);
        s.set_gTransformMatrix(new Matrix4f(new float[]{0.5f, -0.169f, 0.299f, 0.0f, -0.419f, -0.331f, 0.587f, 0.0f, -0.081f, 0.5f, 0.114f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f}));
        s.set_gTranslate(new Short4((short) 128, (short) 128, (short) 0, (short) 0));
        return new YuvConverter(rs, s);
    }

    public static YuvConverter createVConverter() {
        RenderScript rs = create();
        ScriptC_uchar4ToX s = get4To1(rs);
        s.set_gTransformMatrix(new Matrix4f(new float[]{0.5f, -0.169f, 0.299f, 0.0f, -0.419f, -0.331f, 0.587f, 0.0f, -0.081f, 0.5f, 0.114f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f}));
        s.set_gTranslate(new Short4((short) 128, (short) 128, (short) 0, (short) 0));
        return new YuvConverter(rs, s);
    }

    public int convert(Bitmap bitmap, ByteBuffer buf) {
        byte[] target;
        boolean needsTemp = true;
        if (bitmap.getWidth() * 4 != bitmap.getRowBytes()) {
            Bitmap newBitmap = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Config.ARGB_8888);
            new Canvas(newBitmap).drawBitmap(bitmap, 0.0f, 0.0f, null);
            bitmap = newBitmap;
        }
        Allocation in = Allocation.createFromBitmap(this.rs, bitmap, MipmapControl.MIPMAP_NONE, 1);
        Allocation out = Allocation.createTyped(this.rs, new Builder(this.rs, this.s.getTo()).setX(bitmap.getWidth()).setY(bitmap.getHeight()).create());
        this.s.forEach_root(in, out);
        if (!buf.isDirect() && buf.arrayOffset() == 0 && buf.position() == 0) {
            needsTemp = false;
        }
        if (needsTemp) {
            if (this.temp == null || this.temp.length < out.getBytesSize()) {
                this.temp = new byte[out.getBytesSize()];
            }
            target = this.temp;
        } else {
            target = buf.array();
        }
        out.copyTo(target);
        if (needsTemp) {
            buf.put(target);
        } else {
            buf.position(buf.position() + out.getBytesSize());
        }
        this.s.forEach_root(in, out);
        return out.getBytesSize();
    }
}
